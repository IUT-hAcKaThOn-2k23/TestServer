{
	"info": {
		"_postman_id": "915b757a-7bf6-4b52-a3e0-0fc3e461ef91",
		"name": "UserFunction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all the blogs of logged in user",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNmVlNzJmMWI2NmFiZTA2NWNjY2FjMSIsIm5hbWUiOiJIZWRndWluIiwiZW1haWwiOiI3M0BnbWFpbC5jb20iLCJpYXQiOjE2NTE2NzM0MDR9.dsjmbL-3pBK-BthU4Jrted0N3si7caIPRhqyHIbI34E",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:5001/user/626ee72f1b66abe065cccac1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"user",
						"626ee72f1b66abe065cccac1"
					]
				},
				"description": "All the blogs posted by a logged user can be seen here.\n\n**The API needs following info**\n-  Pass the userID of a particular user as a routing parameter.\n- The API is protected. So send the **auth-token** as header.\n- The API can be used to retrieve one's personally posted blogs."
			},
			"response": []
		},
		{
			"name": "Commenting on a post",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNmVlNzJmMWI2NmFiZTA2NWNjY2FjMSIsIm5hbWUiOiJIZWRndWluIiwiZW1haWwiOiI3M0BnbWFpbC5jb20iLCJpYXQiOjE2NTE2NzM0MDR9.dsjmbL-3pBK-BthU4Jrted0N3si7caIPRhqyHIbI34E",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\":\"nice content\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/user/comment/626efe65d542247035e26bb2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"user",
						"comment",
						"626efe65d542247035e26bb2"
					]
				},
				"description": "Use this API to add comment to the post.\n\n**The API requires following data**\n- Send the postID where the comment needs to be added as parameter of route.\n- As the request body send the comment body only under the *comment* attribute\n-Like dislike and report will be updated by other API\n\nReturns the msg \"Comment added\" after the successful addition of it."
			},
			"response": []
		},
		{
			"name": "Reporting a comment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNmVlNzJmMWI2NmFiZTA2NWNjY2FjMSIsIm5hbWUiOiJIZWRndWluIiwiZW1haWwiOiI3M0BnbWFpbC5jb20iLCJpYXQiOjE2NTE2NzM0MDR9.dsjmbL-3pBK-BthU4Jrted0N3si7caIPRhqyHIbI34E",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:5001/user/report/62729a37464d4875262b7f20",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"user",
						"report",
						"62729a37464d4875262b7f20"
					]
				},
				"description": "Just call this API with the commnet id to report as routing parameter. **No body is required**"
			},
			"response": []
		},
		{
			"name": "Reacting on a comment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNmVlNzJmMWI2NmFiZTA2NWNjY2FjMSIsIm5hbWUiOiJIZWRndWluIiwiZW1haWwiOiI3M0BnbWFpbC5jb20iLCJpYXQiOjE2NTE2NzM0MDR9.dsjmbL-3pBK-BthU4Jrted0N3si7caIPRhqyHIbI34E",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"like\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/user/react/62729a37464d4875262b7f20",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"user",
						"react",
						"62729a37464d4875262b7f20"
					]
				},
				"description": "Call this API to update the react count of a comment.\n\n**Send the boolean value of the corresponding action as body**\n\nThis is a protected route. So remember to add **auth-token** as request header"
			},
			"response": []
		},
		{
			"name": "Deleting a comment",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNmVlNzJmMWI2NmFiZTA2NWNjY2FjMSIsIm5hbWUiOiJIZWRndWluIiwiZW1haWwiOiI3M0BnbWFpbC5jb20iLCJpYXQiOjE2NTE2NzM0MDR9.dsjmbL-3pBK-BthU4Jrted0N3si7caIPRhqyHIbI34E",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:5001/user/62729a37464d4875262b7f20",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"user",
						"62729a37464d4875262b7f20"
					]
				},
				"description": "This API deletes the comment that a logged in user have commented.\r\n\r\n- Put the id of the comment that needs to be deleted. \r\n- send the *auth-token* as the header\r\n\r\nA user can delete his own commnet but cannot delete the comment of posts where he is the author. A user can also not edit his comment. This is to prevent the spread of **misinformation**"
			},
			"response": []
		},
		{
			"name": "Get rating of a user",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNzJkNTMwMTAxYmIwYmQ0MDFmZmE4YyIsIm5hbWUiOiJEdW1ibGVkb3JlMyIsImVtYWlsIjoiOTFAZ21haWwuY29tIiwiaWF0IjoxNjUxNjk0MDMwfQ.AI9iG0KHhKxL85HWzLvmWb025YBpwXkc1GAJZsl8pbc",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/rating/6272d53c101bb0bd401ffa8f",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"rating",
						"6272d53c101bb0bd401ffa8f"
					]
				},
				"description": "The API gets the rating of a particular user\r\n\r\n**The API needs-**\r\n- The userID of the user whose rating needs to be fetched.Send the ID as paramater value\r\n\r\nThe route is **not protected**. \r\n\r\nThe response will send-\r\n- \"_id\" : id of the user\r\n- \"rating\" : rating of the user"
			},
			"response": []
		},
		{
			"name": "rating a user",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNmVlNzJmMWI2NmFiZTA2NWNjY2FjMSIsIm5hbWUiOiJIZWRndWluIiwiZW1haWwiOiI3M0BnbWFpbC5jb20iLCJpYXQiOjE2NTE2OTY1ODl9.66rrjuVSrv-TEEqzBGlJpCEjtIc9sgSSJ9y4MgApjdU",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/rating/626ee72f1b66abe065cccac1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"rating",
						"626ee72f1b66abe065cccac1"
					]
				},
				"description": "This API adds rating to particular user\n\n**The API needs the following info**\n- Pass the user that's been rated as link param \n- This is a **protected** route. So the rater's id will be collected from there.\n- The request body will consist of one single attribute\n- *rating:* The rating the raters want to give. This validation needs to be done in frontend according to highest possible rating value\n\n**The API returns**\n- *rating added* if the rating is added successfully\n- *already rated* if the rater has already rated that user.\n- *cannot rate yourself* if anybody try to rate himself"
			},
			"response": []
		}
	]
}
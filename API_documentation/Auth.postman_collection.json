{
	"info": {
		"_postman_id": "cbbd1015-a0af-43c4-8143-b37b89995517",
		"name": "Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://localhost:5001/auth/login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"73@gmail.com\",\r\n    \"password\":\"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"auth",
						"login"
					]
				},
				"description": "API to login using mail and password. \n\n**Successful Login** :\n\nIn the event of successful log in. The header of the response will be set to the JWT token.\nThe response body will have the below key-value: \n- \"status\":\"ok\"\n- \"user\": the given token\n- \"role\":\"user\"\n\n**Unsuccessful Login** :\n\nThere are 2 cases of this:\n1. Email exists BUT password doesn't match\n\nIn this case. The API response body will be:\n- \"status\": \"ok\"\n- \"user\": \"error\"\n- \"role\": \"error\"\n\n2. Email doesn't exist at all\n\nIn this case. The API response body will be:\n- \"status\": \"error\"\n- \"user\": \"error\""
			},
			"response": []
		},
		{
			"name": "http://localhost:5001/auth/signUp",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Severus\",\r\n        \"mail\" : \"70@gmail.com\",\r\n        \"password\": \"123\",\r\n        \"about\": \"not much lol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/auth/signUp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"auth",
						"signUp"
					]
				},
				"description": "API to signUp using various attributes.\n\n**The API takes following params from request body:**\n- name : Give the name of the user\n- rating : this is automatically provided by the API. The default value is 1. **Do not take this value from user**\n- email : Validate the email address in the frontend. No validation is done in the backend. Uniqueness of the mail is checked in the backend.\n- password: Password is hashed in the backend\n- about: A slight description about the user. \n\n**The API returns :**\n- The response of the database it self. If any validation error is seen. Check the requirements of request body."
			},
			"response": []
		}
	]
}